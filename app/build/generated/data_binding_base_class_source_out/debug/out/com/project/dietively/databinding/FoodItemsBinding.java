// Generated by view binder compiler. Do not edit!
package com.project.dietively.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.dietively.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FoodItemsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView calorie;

  @NonNull
  public final TextView carbohydrates;

  @NonNull
  public final TextView fat;

  @NonNull
  public final TextView foodName;

  @NonNull
  public final ImageView image;

  @NonNull
  public final LinearLayout item;

  @NonNull
  public final TextView protein;

  private FoodItemsBinding(@NonNull CardView rootView, @NonNull TextView calorie,
      @NonNull TextView carbohydrates, @NonNull TextView fat, @NonNull TextView foodName,
      @NonNull ImageView image, @NonNull LinearLayout item, @NonNull TextView protein) {
    this.rootView = rootView;
    this.calorie = calorie;
    this.carbohydrates = carbohydrates;
    this.fat = fat;
    this.foodName = foodName;
    this.image = image;
    this.item = item;
    this.protein = protein;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FoodItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FoodItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.food_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FoodItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calorie;
      TextView calorie = ViewBindings.findChildViewById(rootView, id);
      if (calorie == null) {
        break missingId;
      }

      id = R.id.carbohydrates;
      TextView carbohydrates = ViewBindings.findChildViewById(rootView, id);
      if (carbohydrates == null) {
        break missingId;
      }

      id = R.id.fat;
      TextView fat = ViewBindings.findChildViewById(rootView, id);
      if (fat == null) {
        break missingId;
      }

      id = R.id.food_name;
      TextView foodName = ViewBindings.findChildViewById(rootView, id);
      if (foodName == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.item;
      LinearLayout item = ViewBindings.findChildViewById(rootView, id);
      if (item == null) {
        break missingId;
      }

      id = R.id.protein;
      TextView protein = ViewBindings.findChildViewById(rootView, id);
      if (protein == null) {
        break missingId;
      }

      return new FoodItemsBinding((CardView) rootView, calorie, carbohydrates, fat, foodName, image,
          item, protein);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
